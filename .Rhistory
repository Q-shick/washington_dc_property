# import packages
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(RCurl)
library(ggmap)
library(bitops)
library(GGally)
library(corrplot)
# read the dataset
house.price <- read.csv('DC_Properties.csv', na.strings = c("", "NA"))
# show column structures
str(house.price)
# show first a few rows
kable(head(house.price)) %>%
kable_styling() %>%
scroll_box(width = "100%", height = "500px")
# drop rows with price as NA
house.price <- house.price[complete.cases(house.price[ , "PRICE"]), ]
# histogram independent variable "Price"
ggplot(house.price, aes(x = PRICE)) +
geom_histogram(binwidth = 10000,
col = "red",
fill = "green",
alpha = .25) +
labs(title = "Washington D.C House Price Histogram") +
labs(x = "Price", y = "Count") +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(c(0, 2000000))
summary(house.price$PRICE)
sbbox <- make_bbox(lon = house.price$LONGITUDE, lat = house.price$LATITUDE, f = .1)
dc_map <- get_stamenmap(sbbox, zoom = 12, maptype = "toner-lite")
price_group <- c(seq(0, 1000000, by = 200000), Inf)
price_label <- c("<200k", "<400k", "<600k", "<800k", "<1mil", ">1mil")
ggmap(dc_map) +
geom_point(data = house.price,
aes(LONGITUDE, LATITUDE,
color = cut(PRICE, price_group)),
size = 0.1, alpha = 0.1) +
labs(title = "Washington D.C House Price Heat Map") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
scale_color_brewer(palette = "Oranges",
name = "Price Range",
labels = price_label)
house.price$SALEDATE <- substr(house.price$SALEDATE, 0, 10)
house.price$SALEDATE <- as.Date(house.price$SALEDATE)
sale.year <- as.numeric(substr(house.price[, "SALEDATE"], 0, 4))
sale.year <- sale.year[!is.na(sale.year)]
hist(sale.year,
breaks = c(-Inf, seq(1990, 2018, 1)),
xlim = c(1990, 2018),
main = "Sales by Year",
xlab = "Year",
border = 'blue', col = 'green',
prob = T)
axis(side = 1, at = c(2015, 2018))
lines(density(sale.year), col = 'red')
quantile(sale.year, probs = seq(0, 1, 0.1))
# drop sales made before 2016.01.01.
house.price <- subset(house.price, SALEDATE > as.Date("2015-12-31"))
# drop redundant or single-value variables
house.price <- select(house.price, -c("X.1", "CITY", "STATE", "X", "Y"))
# count NA for each variable
na_count <- sapply(house.price, function(y) {
sum(length(which(is.na(y))))
})
# all the variables with NA's
na_count <- na_count[na_count != 0]
# variable and the number of NA's
print(na_count)
na_cols <- names(na_count)
na_cols <- na_cols[!na_cols %in% c("AYB", "QUADRANT")]
house.price <- select(house.price, -na_cols)
house.price <- house.price[complete.cases(house.price), ]
print(levels(house.price$GIS_LAST_MOD_DTTM))
house.price <- select(house.price, -c("GIS_LAST_MOD_DTTM"))
numeric_cols <- names(select_if(house.price, is.numeric))
print(numeric_cols)
numeric_cols <- numeric_cols[!numeric_cols %in% c("USECODE", "ZIPCODE")]
corr <- cor(house.price[, numeric_cols])
corrplot.mixed(corr, number.cex = .75, tl.pos = "lt")
house.price <- subset(house.price, -c("SALE_NUM", "BLDG_NUM", "FIREPLACES"))
subset(house.price, c("SALE_NUM", "BLDG_NUM", "FIREPLACES"))
subset(house.price, "SALE_NUM", "BLDG_NUM", "FIREPLACES")
subset(house.price, ["SALE_NUM", "BLDG_NUM", "FIREPLACES"])
subset(house.price, ("SALE_NUM", "BLDG_NUM", "FIREPLACES"))
house.price <- subset(house.price, select = -c("SALE_NUM", "BLDG_NUM", "FIREPLACES"))
house.price <- subset(house.price, select = -c(SALE_NUM, BLDG_NUM, FIREPLACES))
categorical_cols <- names(house.price)[!names(house.price) %in% numeric_cols]
print(categorical_cols)
apply(categorical_cols, function(x) unique(x))
lapply(categorical_cols, function(x) unique(x))
lapply(categorical_cols, unique())
lapply(categorical_cols, unique
lapply(categorical_cols, unique)
sapply(categorical_cols, unique())
sapply(categorical_cols, unique(x))
sapply(categorical_cols, function(x) unique(x))
apply(house.price, categorical_cols, function(x) unique(x))
apply(house.price, 2, function(x) unique(x))
apply(house.price[, categorical_cols], 2, function(x) unique(x))
house.price <- subset(house.price, select = -SALEDATE)
numeric_cols <- names(select_if(house.price, is.numeric))
print(numeric_cols)
numeric_cols <- numeric_cols[!numeric_cols %in% c("USECODE", "ZIPCODE")]
corr <- cor(house.price[, numeric_cols])
corrplot.mixed(corr, number.cex = .75, tl.pos = "lt")
categorical_cols <- names(house.price)[!names(house.price) %in% numeric_cols]
print(categorical_cols)
apply(house.price[, categorical_cols], 2, function(x) unique(x))
str(apply(house.price[, categorical_cols], 2, function(x) unique(x)))
print(categorical_cols)
cor(house.price, PRICE)
with(house.price, cor(PRICE))
linear.reg <- lm(PRICE ~ BATHRM, BEDRM, data = house.price)
summary(linear.reg)
linear.reg <- lm(PRICE ~ BATHRM + BEDRM, data = house.price)
summary(linear.reg)
# import packages
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(RCurl)
library(ggmap)
library(bitops)
library(GGally)
library(corrplot)
# read the dataset
house.price <- read.csv('DC_Properties.csv', na.strings = c("", "NA"))
# show column structures
str(house.price)
# show first a few rows
kable(head(house.price)) %>%
kable_styling() %>%
scroll_box(width = "100%", height = "500px")
house.price$SALEDATE <- substr(house.price$SALEDATE, 0, 10)
house.price$SALEDATE <- as.Date(house.price$SALEDATE)
sale.year <- as.numeric(substr(house.price[, "SALEDATE"], 0, 4))
sale.year <- sale.year[!is.na(sale.year)]
hist(sale.year,
breaks = c(-Inf, seq(1990, 2018, 1)),
xlim = c(1990, 2018),
main = "Sales by Year",
xlab = "Year",
border = 'blue', col = 'green',
prob = T)
axis(side = 1, at = c(2015, 2018))
lines(density(sale.year), col = 'red')
quantile(sale.year, probs = seq(0, 1, 0.1))
# drop sales made before 2016.01.01.
house.price <- subset(house.price, SALEDATE > as.Date("2015-12-31"))
house.price <- subset(house.price, select = -SALEDATE)
# drop rows with price as NA
house.price <- house.price[complete.cases(house.price[ , "PRICE"]), ]
# histogram independent variable "Price"
ggplot(house.price, aes(x = PRICE)) +
geom_histogram(binwidth = 10000,
col = "red",
fill = "green",
alpha = .25) +
labs(title = "Washington D.C House Price Histogram") +
labs(x = "Price", y = "Count") +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(c(0, 2000000))
summary(house.price$PRICE)
sbbox <- make_bbox(lon = house.price$LONGITUDE, lat = house.price$LATITUDE, f = .1)
dc_map <- get_stamenmap(sbbox, zoom = 12, maptype = "toner-lite")
price_group <- c(seq(0, 1000000, by = 200000), Inf)
price_label <- c("<200k", "<400k", "<600k", "<800k", "<1mil", ">1mil")
ggmap(dc_map) +
geom_point(data = house.price,
aes(LONGITUDE, LATITUDE,
color = cut(PRICE, price_group)),
size = 0.1, alpha = 0.1) +
labs(title = "Washington D.C House Price Heat Map") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
scale_color_brewer(palette = "Oranges",
name = "Price Range",
labels = price_label)
# drop redundant or single-value variables
house.price <- select(house.price, -c("X.1", "CITY", "STATE", "X", "Y"))
# count NA for each variable
na_count <- sapply(house.price, function(y) {
sum(length(which(is.na(y))))
})
# all the variables with NA's
na_count <- na_count[na_count != 0]
# variable and the number of NA's
print(na_count)
na_cols <- names(na_count)
na_cols <- na_cols[!na_cols %in% c("AYB", "QUADRANT")]
house.price <- select(house.price, -na_cols)
house.price <- house.price[complete.cases(house.price), ]
print(levels(house.price$GIS_LAST_MOD_DTTM))
house.price <- select(house.price, -c("GIS_LAST_MOD_DTTM"))
numeric_cols <- names(select_if(house.price, is.numeric))
print(numeric_cols)
numeric_cols <- numeric_cols[!numeric_cols %in% c("USECODE", "ZIPCODE")]
corr <- cor(house.price[, numeric_cols])
corrplot.mixed(corr, number.cex = .75, tl.pos = "lt")
# drop unrelated variables and collinearity variables
house.price <- subset(house.price, select = -c(SALE_NUM, BLDG_NUM, FIREPLACES,
ROOMS))
categorical_cols <- names(house.price)[!names(house.price) %in% numeric_cols]
print(categorical_cols)
# number of unique values in each categorical variable
str(apply(house.price[, categorical_cols], 2, function(x) unique(x)))
linear.reg <- lm(PRICE ~ BATHRM + BEDRM, data = house.price)
ggmap(dc_map) +
geom_point(data = house.price,
aes(LONGITUDE, LATITUDE,
color = cut(PRICE, price_group)),
size = 0.1, alpha = 0.2) +
labs(title = "Washington D.C House Price Heat Map") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
scale_color_brewer(palette = "Oranges",
name = "Price Range",
labels = price_label)
categorical_cols <- names(house.price)[!names(house.price) %in% numeric_cols]
print(categorical_cols)
# number of unique values in each categorical variable
str(apply(house.price[, categorical_cols], 2, function(x) unique(x)))
linear.reg <- lm(PRICE ~ BATHRM + BEDRM, data = house.price)
summary(linear.reg)
#
ggplot(house.price, aes(LANDAREA, PRICE)) +
geom_point()
ggplot(house.price, aes(LANDAREA, PRICE)) +
geom_point() + smooth()
ggplot(house.price, aes(LANDAREA, PRICE)) +
geom_point() +
geom_smooth()
ggplot(house.price, aes(BATHRM, PRICE)) +
geom_point() +
geom_smooth()
ggplot(house.price, aes(LANDAREA, PRICE)) +
geom_point() +
geom_smooth()
ggplot(house.price, aes(LANDAREA, PRICE)) +
geom_point(shape = 1) +
geom_smooth(method = lm)
ggplot(house.price, aes(LANDAREA, PRICE)) +
geom_point(shape = 1, alpha = 0.2) +
geom_smooth(method = lm)
